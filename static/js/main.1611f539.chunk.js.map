{"version":3,"sources":["style.tsx","components/MaskedInput.tsx","components/TimerCard.tsx","Helper.tsx","App.tsx","index.tsx"],"names":["theme","createMuiTheme","overrides","MuiSvgIcon","root","fontSize","color","MuiInputBase","height","width","MuiFormHelperText","textAlign","fixWarn","unstable_createMuiStrictModeTheme","responsiveFontSizes","factor","useStyles","makeStyles","background","heading","marginBottom","timer","padding","borderRadius","card","form","margin","regEx","MaskedInput","inputRef","other","ref","inputElement","mask","TimerCard","interval","useRef","useState","time","setTime","isRunning","setRunning","classes","totalSeconds","convTime","split","parseInt","timeToNumber","Card","className","component","CardContent","Box","display","flexDirection","justifyContent","alignItems","m","Typography","variant","FormControl","Fade","in","timeout","TextField","type","value","helperText","InputProps","inputComponent","onChange","e","timeFormat","target","IconButton","aria-label","onClick","clearInterval","current","window","setInterval","alert","num","seconds","minutes","Math","floor","numberToTime","App","CssBaseline","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1611f539.chunk.js","sourcesContent":["import {makeStyles, createMuiTheme, responsiveFontSizes, unstable_createMuiStrictModeTheme} from '@material-ui/core/styles';\r\n\r\nlet theme = createMuiTheme({\r\n    overrides:{\r\n        MuiSvgIcon:{\r\n            root:{\r\n                fontSize: \"clamp(2rem, 5vw,3rem)\",\r\n                color: \"#000\"\r\n            },\r\n        },\r\n        MuiInputBase:{\r\n            root:{\r\n                height: \"clamp(2.5rem,4vh,4rem)\",\r\n                fontSize: \"clamp(1.5rem,3vw,2rem)\",\r\n                width:\"clamp(4rem,8vw,5.2rem)\",\r\n            }\r\n        },\r\n        MuiFormHelperText:{\r\n            root:{\r\n                textAlign: \"center\",\r\n                fontSize: \"clamp(0.6rem,1.5vw,0.75rem)\",\r\n                color:\"#000\"\r\n            }\r\n        }\r\n\r\n    }\r\n});\r\n\r\nlet fixWarn = unstable_createMuiStrictModeTheme();\r\ntheme = responsiveFontSizes(theme, {factor: 3});\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: \"#032b43\",\r\n        height: \"100vh\"\r\n    },\r\n    heading:{\r\n        color: \"#e5e4e4\",\r\n        marginBottom: \"3rem\"\r\n    },\r\n    timer:{\r\n        background: \"#808080\",\r\n        padding: \"2rem 3.2rem\",\r\n        borderRadius: \"8px\"\r\n    },\r\n    card: {\r\n        background: \"#e5e4e4\",\r\n        borderRadius: 20,\r\n    },\r\n    form:{\r\n        margin: \"2rem auto 1.5rem\"\r\n    }\r\n});\r\n\r\nexport {useStyles,theme,fixWarn};","import React from 'react';\r\nimport Masked from \"react-text-mask\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst regEx: Array<any> = [/\\d/,/\\d/,':',/[0-5]/,/\\d/];\r\n\r\nfunction MaskedInput({inputRef, ...other}: any) {\r\n    return (\r\n        <Masked\r\n            {...other}\r\n            ref={ref => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={regEx}\r\n        />\r\n    );\r\n}\r\n\r\nMaskedInput.propTypes = {\r\n    inputRef: PropTypes.func.isRequired\r\n};\r\n\r\nexport default MaskedInput;\r\n","import React, {useRef, useState} from 'react';\r\nimport {Box, Card, CardContent, Fade, FormControl, IconButton, TextField, Typography} from \"@material-ui/core\";\r\nimport MaskedInput from \"./MaskedInput\";\r\nimport {useStyles} from \"../style\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\";\r\nimport {numberToTime, timeToNumber} from \"../Helper\";\r\n\r\n\r\nconst TimerCard = () => {\r\n    //Necessary to clear the interval\r\n    let interval = useRef(0);\r\n    //Set Initial States Using Hooks\r\n    const [time, setTime] = useState(\"00:00\")\r\n    const [isRunning, setRunning] = useState(false)\r\n    //Set Styles Here\r\n    const classes = useStyles();\r\n    //Calculate total number of seconds\r\n    let totalSeconds = timeToNumber(time)\r\n    const toggleTimer = () => {\r\n        setRunning(!isRunning)\r\n        if (!isRunning && totalSeconds !== 0) {\r\n            interval.current = window.setInterval(() => {\r\n                if (totalSeconds > 0) {\r\n                    totalSeconds = totalSeconds - 1;\r\n                } else {\r\n                    clearInterval(interval.current)\r\n                    setRunning(false)\r\n                    alert(\"Time is up!!!\")\r\n                }\r\n                setTime(numberToTime(totalSeconds))\r\n            }, 1000)\r\n        } else {\r\n            setRunning(false)\r\n            clearInterval(interval.current)\r\n        }\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setTime(\"00:00\");\r\n        setRunning(false)\r\n        clearInterval(interval.current)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.card} component=\"section\">\r\n                <CardContent>\r\n                    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\"\r\n                         m={3}>\r\n                        <Typography variant=\"h1\" component=\"h2\" className={classes.timer}>\r\n                            {time === '' ? \"00:00\" : time}\r\n                        </Typography>\r\n                        <FormControl className={classes.form} component=\"form\">\r\n                            <Fade in={!isRunning} timeout={800}>\r\n                                <TextField type=\"text\"\r\n                                           value={time}\r\n                                           helperText=\"Set the timer\"\r\n                                           InputProps={{inputComponent: MaskedInput}}\r\n                                           onChange={(e: any) => {\r\n                                               let timeFormat = e.target.value;\r\n                                               setTime(timeFormat);\r\n                                           }}/>\r\n                            </Fade>\r\n                        </FormControl>\r\n                        <Box>\r\n                            <IconButton aria-label=\"play-pause\"\r\n                                        onClick={toggleTimer}>\r\n                                {isRunning ? <PauseCircleOutlineIcon/> :\r\n                                    <PlayCircleOutlineIcon/>}\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"reset\" onClick={handleReset}>\r\n                                <RotateLeftIcon/>\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TimerCard;","//Convert time-string input to number\r\nexport const timeToNumber = (time: string) => {\r\n    let convTime: Array<string> = time.split(\":\");\r\n    let minutes: number = parseInt(convTime[0], 10);\r\n    let seconds: number = convTime[1] ? parseInt(convTime[1], 10) : 0;\r\n    return minutes * 60 + seconds;\r\n}\r\n//Convert number to time-string for re-render\r\nexport const numberToTime = (num: number) => {\r\n    let seconds: number = num % 60;\r\n    let minutes: number = Math.floor(num / 60);\r\n    return `${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}`\r\n}\r\n\r\n","import React from 'react';\nimport {CssBaseline, Box, Typography, ThemeProvider} from '@material-ui/core'\nimport {useStyles, theme, fixWarn} from \"./style\";\nimport TimerCard from \"./components/TimerCard\";\n\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <>\n            <CssBaseline/>\n            <ThemeProvider theme={fixWarn}>\n                <ThemeProvider theme={theme}>\n                    <Box display=\"flex\" flexDirection=\"column\"\n                         justifyContent=\"center\"\n                         alignItems=\"center\"\n                         component=\"section\"\n                         className={classes.root}>\n                        <Typography variant=\"h3\" component=\"h1\" className={classes.heading}>\n                            Simple Cooking Alarm\n                        </Typography>\n                        <TimerCard/>\n                    </Box>\n                </ThemeProvider>\n            </ThemeProvider>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}